<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="24" total="66" passed="26" failed="12" skipped="4">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-05-02T18:46:21 IST" name="MyTestSuite" finished-at="2023-05-02T18:53:27 IST" duration-ms="425625">
    <groups>
      <group name="Sanity">
        <method signature="HomePageTest.validate_AboutUs()[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" name="validate_AboutUs" class="lumaProject.Tests.HomePageTest"/>
        <method signature="HomePageTest.validate_HomeIcon()[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" name="validate_HomeIcon" class="lumaProject.Tests.HomePageTest"/>
        <method signature="LoginpageTest.validateWrongCredentials()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" name="validateWrongCredentials" class="lumaProject.Tests.LoginpageTest"/>
        <method signature="WhatsNewTest.validateWhatsNew()[pri:0, instance:lumaProject.Tests.WhatsNewTest@2a448449]" name="validateWhatsNew" class="lumaProject.Tests.WhatsNewTest"/>
        <method signature="HomePageTest.validate_AboutUs()[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" name="validate_AboutUs" class="lumaProject.Tests.HomePageTest"/>
        <method signature="HomePageTest.validate_HomeIcon()[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" name="validate_HomeIcon" class="lumaProject.Tests.HomePageTest"/>
        <method signature="LoginpageTest.validateWrongCredentials()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" name="validateWrongCredentials" class="lumaProject.Tests.LoginpageTest"/>
        <method signature="WhatsNewTest.validateWhatsNew()[pri:0, instance:lumaProject.Tests.WhatsNewTest@75f95314]" name="validateWhatsNew" class="lumaProject.Tests.WhatsNewTest"/>
        <method signature="HomePageTest.validate_AboutUs()[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" name="validate_AboutUs" class="lumaProject.Tests.HomePageTest"/>
        <method signature="HomePageTest.validate_HomeIcon()[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" name="validate_HomeIcon" class="lumaProject.Tests.HomePageTest"/>
        <method signature="LoginpageTest.validateWrongCredentials()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" name="validateWrongCredentials" class="lumaProject.Tests.LoginpageTest"/>
        <method signature="WhatsNewTest.validateWhatsNew()[pri:0, instance:lumaProject.Tests.WhatsNewTest@4dd02341]" name="validateWhatsNew" class="lumaProject.Tests.WhatsNewTest"/>
      </group> <!-- Sanity -->
      <group name="Regression">
        <method signature="AddAddressTest.addAddressTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" name="addAddressTest" class="lumaProject.Tests.AddAddressTest"/>
        <method signature="AddAddressTest.dummyTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" name="dummyTest" class="lumaProject.Tests.AddAddressTest"/>
        <method signature="CreateAccountTest.createAccount()[pri:0, instance:lumaProject.Tests.CreateAccountTest@32f232a5]" name="createAccount" class="lumaProject.Tests.CreateAccountTest"/>
        <method signature="LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" name="test_ValidLogin" class="lumaProject.Tests.LoginpageTest"/>
        <method signature="AddAddressTest.addAddressTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" name="addAddressTest" class="lumaProject.Tests.AddAddressTest"/>
        <method signature="AddAddressTest.dummyTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" name="dummyTest" class="lumaProject.Tests.AddAddressTest"/>
        <method signature="CreateAccountTest.createAccount()[pri:0, instance:lumaProject.Tests.CreateAccountTest@6127a7e]" name="createAccount" class="lumaProject.Tests.CreateAccountTest"/>
        <method signature="LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" name="test_ValidLogin" class="lumaProject.Tests.LoginpageTest"/>
        <method signature="AddAddressTest.addAddressTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" name="addAddressTest" class="lumaProject.Tests.AddAddressTest"/>
        <method signature="AddAddressTest.dummyTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" name="dummyTest" class="lumaProject.Tests.AddAddressTest"/>
        <method signature="CreateAccountTest.createAccount()[pri:0, instance:lumaProject.Tests.CreateAccountTest@3212a8d7]" name="createAccount" class="lumaProject.Tests.CreateAccountTest"/>
        <method signature="LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" name="test_ValidLogin" class="lumaProject.Tests.LoginpageTest"/>
      </group> <!-- Regression -->
    </groups>
    <test started-at="2023-05-02T18:46:21 IST" name="uitest_edge" finished-at="2023-05-02T18:49:55 IST" duration-ms="214060">
      <class name="lumaProject.Tests.HomePageTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:46:21 IST" name="beforeSuite" finished-at="2023-05-02T18:46:21 IST" duration-ms="348" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:46:21 IST" name="setup" finished-at="2023-05-02T18:46:51 IST" duration-ms="30030" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:46:51 IST" name="beforeMethod" finished-at="2023-05-02T18:46:51 IST" duration-ms="10" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.HomePageTest.validate_AboutUs()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:46:51 IST" name="beforeMethod" finished-at="2023-05-02T18:46:51 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validate_AboutUs()[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:46:51 IST" name="validate_AboutUs" finished-at="2023-05-02T18:46:53 IST" duration-ms="2015" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_AboutUs -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:46:53 IST" name="afterMethod" finished-at="2023-05-02T18:46:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validate_AboutUs status=SUCCESS method=HomePageTest.validate_AboutUs()[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:46:53 IST" name="beforeMethod" finished-at="2023-05-02T18:46:53 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.HomePageTest.validate_HomeIcon()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:46:53 IST" name="beforeMethod" finished-at="2023-05-02T18:46:53 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validate_HomeIcon()[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:46:53 IST" name="validate_HomeIcon" finished-at="2023-05-02T18:46:56 IST" duration-ms="2261" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_HomeIcon -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:46:56 IST" name="afterMethod" finished-at="2023-05-02T18:46:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validate_HomeIcon status=SUCCESS method=HomePageTest.validate_HomeIcon()[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:46:56 IST" name="teardown" finished-at="2023-05-02T18:46:57 IST" duration-ms="1126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:lumaProject.Tests.HomePageTest@79d94571]" started-at="2023-05-02T18:53:27 IST" name="afterSuite" finished-at="2023-05-02T18:53:28 IST" duration-ms="605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- lumaProject.Tests.HomePageTest -->
      <class name="lumaProject.Tests.CreateAccountTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.CreateAccountTest@3212a8d7]" started-at="2023-05-02T18:47:10 IST" name="setup" finished-at="2023-05-02T18:47:18 IST" duration-ms="7378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.CreateAccountTest@3212a8d7]" started-at="2023-05-02T18:47:18 IST" name="beforeMethod" finished-at="2023-05-02T18:47:18 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.CreateAccountTest.createAccount()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.CreateAccountTest@3212a8d7]" started-at="2023-05-02T18:47:18 IST" name="beforeMethod" finished-at="2023-05-02T18:47:18 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createAccount()[pri:0, instance:lumaProject.Tests.CreateAccountTest@3212a8d7]" started-at="2023-05-02T18:47:18 IST" name="createAccount" finished-at="2023-05-02T18:47:35 IST" duration-ms="17424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccount -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.CreateAccountTest@3212a8d7]" started-at="2023-05-02T18:47:35 IST" name="afterMethod" finished-at="2023-05-02T18:47:35 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createAccount status=SUCCESS method=CreateAccountTest.createAccount()[pri:0, instance:lumaProject.Tests.CreateAccountTest@3212a8d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.CreateAccountTest@3212a8d7]" started-at="2023-05-02T18:47:35 IST" name="teardown" finished-at="2023-05-02T18:47:36 IST" duration-ms="960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.CreateAccountTest -->
      <class name="lumaProject.Tests.AddAddressTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" started-at="2023-05-02T18:49:19 IST" name="setup" finished-at="2023-05-02T18:49:25 IST" duration-ms="5634" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" started-at="2023-05-02T18:49:25 IST" name="beforeMethod" finished-at="2023-05-02T18:49:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.AddAddressTest.addAddressTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" started-at="2023-05-02T18:49:25 IST" name="beforeMethod" finished-at="2023-05-02T18:49:25 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addAddressTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" started-at="2023-05-02T18:49:25 IST" name="addAddressTest" finished-at="2023-05-02T18:49:54 IST" duration-ms="29731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddressTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" started-at="2023-05-02T18:49:54 IST" name="afterMethod" finished-at="2023-05-02T18:49:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAddressTest status=SUCCESS method=AddAddressTest.addAddressTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" started-at="2023-05-02T18:49:54 IST" name="beforeMethod" finished-at="2023-05-02T18:49:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.AddAddressTest.dummyTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" started-at="2023-05-02T18:49:54 IST" name="beforeMethod" finished-at="2023-05-02T18:49:54 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dummyTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" started-at="2023-05-02T18:49:54 IST" name="dummyTest" finished-at="2023-05-02T18:49:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dummyTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" started-at="2023-05-02T18:49:54 IST" name="afterMethod" finished-at="2023-05-02T18:49:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dummyTest status=SUCCESS method=AddAddressTest.dummyTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.AddAddressTest@495b0487]" started-at="2023-05-02T18:49:54 IST" name="teardown" finished-at="2023-05-02T18:49:55 IST" duration-ms="960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.AddAddressTest -->
      <class name="lumaProject.Tests.LoginpageTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:47:36 IST" name="setup" finished-at="2023-05-02T18:48:03 IST" duration-ms="26619" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:03 IST" name="beforeMethod" finished-at="2023-05-02T18:48:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.dummyTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:03 IST" name="beforeMethod" finished-at="2023-05-02T18:48:03 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dummyTest()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:03 IST" name="dummyTest" finished-at="2023-05-02T18:48:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dummyTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:03 IST" name="afterMethod" finished-at="2023-05-02T18:48:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dummyTest status=SUCCESS method=LoginpageTest.dummyTest()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:03 IST" name="beforeMethod" finished-at="2023-05-02T18:48:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.forgetPassword()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:03 IST" name="beforeMethod" finished-at="2023-05-02T18:48:03 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="forgetPassword()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:03 IST" name="forgetPassword" finished-at="2023-05-02T18:48:09 IST" duration-ms="6708" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:09 IST" name="afterMethod" finished-at="2023-05-02T18:48:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgetPassword status=SUCCESS method=LoginpageTest.forgetPassword()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:12 IST" name="beforeMethod" finished-at="2023-05-02T18:48:12 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:12 IST" name="beforeMethod" finished-at="2023-05-02T18:48:12 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:12 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:48:25 IST" duration-ms="13417" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[asgt3@qw.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:25 IST" name="afterMethod" finished-at="2023-05-02T18:48:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:25 IST" name="beforeMethod" finished-at="2023-05-02T18:48:25 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:25 IST" name="beforeMethod" finished-at="2023-05-02T18:48:25 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:25 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:48:40 IST" duration-ms="14375" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test1@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:40 IST" name="afterMethod" finished-at="2023-05-02T18:48:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:40 IST" name="beforeMethod" finished-at="2023-05-02T18:48:40 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:40 IST" name="beforeMethod" finished-at="2023-05-02T18:48:40 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:40 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:48:54 IST" duration-ms="14070" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test2@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:54 IST" name="afterMethod" finished-at="2023-05-02T18:48:54 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:54 IST" name="beforeMethod" finished-at="2023-05-02T18:48:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:54 IST" name="beforeMethod" finished-at="2023-05-02T18:48:54 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:48:54 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:49:03 IST" duration-ms="9680" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test3@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:49:03 IST" name="afterMethod" finished-at="2023-05-02T18:49:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:49:03 IST" name="beforeMethod" finished-at="2023-05-02T18:49:03 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:49:03 IST" name="beforeMethod" finished-at="2023-05-02T18:49:03 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:49:03 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:49:13 IST" duration-ms="9268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test4@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:49:13 IST" name="afterMethod" finished-at="2023-05-02T18:49:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:49:13 IST" name="beforeMethod" finished-at="2023-05-02T18:49:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.validateWrongCredentials()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:49:13 IST" name="beforeMethod" finished-at="2023-05-02T18:49:13 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateWrongCredentials()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:49:13 IST" name="validateWrongCredentials" finished-at="2023-05-02T18:49:18 IST" duration-ms="5501" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [The account sign-in was incorrect or your account is disabled temporarily. Please wait and try again later.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [The account sign-in was incorrect or your account is disabled temporarily. Please wait and try again later.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at lumaProject.Tests.LoginpageTest.validateWrongCredentials(LoginpageTest.java:107)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWrongCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:49:18 IST" name="afterMethod" finished-at="2023-05-02T18:49:18 IST" duration-ms="162" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWrongCredentials status=FAILURE method=LoginpageTest.validateWrongCredentials()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.LoginpageTest@7a1a3478]" started-at="2023-05-02T18:49:18 IST" name="teardown" finished-at="2023-05-02T18:49:19 IST" duration-ms="830" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.LoginpageTest -->
      <class name="lumaProject.Tests.WhatsNewTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.WhatsNewTest@4dd02341]" started-at="2023-05-02T18:46:57 IST" name="setup" finished-at="2023-05-02T18:47:04 IST" duration-ms="6735" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.WhatsNewTest@4dd02341]" started-at="2023-05-02T18:47:04 IST" name="beforeMethod" finished-at="2023-05-02T18:47:04 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.WhatsNewTest.validateWhatsNew()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.WhatsNewTest@4dd02341]" started-at="2023-05-02T18:47:04 IST" name="beforeMethod" finished-at="2023-05-02T18:47:04 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateWhatsNew()[pri:0, instance:lumaProject.Tests.WhatsNewTest@4dd02341]" started-at="2023-05-02T18:47:04 IST" name="validateWhatsNew" finished-at="2023-05-02T18:47:08 IST" duration-ms="4652" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [15 Items] but found [12 Items]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [15 Items] but found [12 Items]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at lumaProject.Tests.WhatsNewTest.validateWhatsNew(WhatsNewTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWhatsNew -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.WhatsNewTest@4dd02341]" started-at="2023-05-02T18:47:08 IST" name="afterMethod" finished-at="2023-05-02T18:47:09 IST" duration-ms="710" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWhatsNew status=FAILURE method=WhatsNewTest.validateWhatsNew()[pri:0, instance:lumaProject.Tests.WhatsNewTest@4dd02341] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.WhatsNewTest@4dd02341]" started-at="2023-05-02T18:47:09 IST" name="teardown" finished-at="2023-05-02T18:47:10 IST" duration-ms="1219" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.WhatsNewTest -->
    </test> <!-- uitest_edge -->
    <test started-at="2023-05-02T18:46:21 IST" name="uitest_Chrome" finished-at="2023-05-02T18:49:56 IST" duration-ms="214924">
      <class name="lumaProject.Tests.HomePageTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" started-at="2023-05-02T18:46:21 IST" name="setup" finished-at="2023-05-02T18:46:52 IST" duration-ms="30971" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" started-at="2023-05-02T18:46:52 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1683033412862" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.HomePageTest.validate_AboutUs()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.aventstack.extentreports.service.ExtentTestManager.createMethod(ExtentTestManager.java:53)
at com.aventstack.extentreports.testng.listener.ExtentITestListenerClassAdapter.beforeInvocation(ExtentITestListenerClassAdapter.java:55)
at org.testng.internal.invokers.InvokedMethodListenerInvoker.invokeListener(InvokedMethodListenerInvoker.java:55)
at org.testng.internal.invokers.BaseInvoker.runInvokedMethodListeners(BaseInvoker.java:67)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:331)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" started-at="2023-05-02T18:46:52 IST" name="beforeMethod" finished-at="2023-05-02T18:46:52 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validate_AboutUs()[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" started-at="2023-05-02T18:46:52 IST" name="validate_AboutUs" finished-at="2023-05-02T18:46:52 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.aventstack.extentreports.service.ExtentTestManager.createMethod(ExtentTestManager.java:53)
at com.aventstack.extentreports.testng.listener.ExtentITestListenerClassAdapter.beforeInvocation(ExtentITestListenerClassAdapter.java:55)
at org.testng.internal.invokers.InvokedMethodListenerInvoker.invokeListener(InvokedMethodListenerInvoker.java:55)
at org.testng.internal.invokers.BaseInvoker.runInvokedMethodListeners(BaseInvoker.java:67)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:331)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_AboutUs -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" started-at="2023-05-02T18:46:52 IST" name="afterMethod" finished-at="2023-05-02T18:46:52 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" started-at="2023-05-02T18:46:52 IST" name="beforeMethod" finished-at="2023-05-02T18:46:52 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" started-at="2023-05-02T18:46:52 IST" name="beforeMethod" finished-at="2023-05-02T18:46:52 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validate_HomeIcon()[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" started-at="2023-05-02T18:46:52 IST" name="validate_HomeIcon" finished-at="2023-05-02T18:46:52 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.aventstack.extentreports.service.ExtentTestManager.createMethod(ExtentTestManager.java:53)
at com.aventstack.extentreports.testng.listener.ExtentITestListenerClassAdapter.beforeInvocation(ExtentITestListenerClassAdapter.java:55)
at org.testng.internal.invokers.InvokedMethodListenerInvoker.invokeListener(InvokedMethodListenerInvoker.java:55)
at org.testng.internal.invokers.BaseInvoker.runInvokedMethodListeners(BaseInvoker.java:67)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:331)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_HomeIcon -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" started-at="2023-05-02T18:46:52 IST" name="afterMethod" finished-at="2023-05-02T18:46:52 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.HomePageTest@1a760689]" started-at="2023-05-02T18:46:52 IST" name="teardown" finished-at="2023-05-02T18:46:52 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.HomePageTest -->
      <class name="lumaProject.Tests.CreateAccountTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.CreateAccountTest@32f232a5]" started-at="2023-05-02T18:47:31 IST" name="setup" finished-at="2023-05-02T18:47:36 IST" duration-ms="5064" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.CreateAccountTest@32f232a5]" started-at="2023-05-02T18:47:36 IST" name="beforeMethod" finished-at="2023-05-02T18:47:36 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.CreateAccountTest.createAccount()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.CreateAccountTest@32f232a5]" started-at="2023-05-02T18:47:36 IST" name="beforeMethod" finished-at="2023-05-02T18:47:36 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createAccount()[pri:0, instance:lumaProject.Tests.CreateAccountTest@32f232a5]" started-at="2023-05-02T18:47:36 IST" name="createAccount" finished-at="2023-05-02T18:47:53 IST" duration-ms="16517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccount -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.CreateAccountTest@32f232a5]" started-at="2023-05-02T18:47:53 IST" name="afterMethod" finished-at="2023-05-02T18:47:53 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createAccount status=SUCCESS method=CreateAccountTest.createAccount()[pri:0, instance:lumaProject.Tests.CreateAccountTest@32f232a5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.CreateAccountTest@32f232a5]" started-at="2023-05-02T18:47:53 IST" name="teardown" finished-at="2023-05-02T18:47:54 IST" duration-ms="1119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.CreateAccountTest -->
      <class name="lumaProject.Tests.AddAddressTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" started-at="2023-05-02T18:49:30 IST" name="setup" finished-at="2023-05-02T18:49:38 IST" duration-ms="7712" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" started-at="2023-05-02T18:49:38 IST" name="beforeMethod" finished-at="2023-05-02T18:49:38 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.AddAddressTest.addAddressTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" started-at="2023-05-02T18:49:38 IST" name="beforeMethod" finished-at="2023-05-02T18:49:38 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addAddressTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" started-at="2023-05-02T18:49:38 IST" name="addAddressTest" finished-at="2023-05-02T18:49:55 IST" duration-ms="17029" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Address Book] but found [Home Page]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Address Book] but found [Home Page]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at lumaProject.Tests.AddAddressTest.addAddressTest(AddAddressTest.java:73)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddressTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" started-at="2023-05-02T18:49:55 IST" name="afterMethod" finished-at="2023-05-02T18:49:56 IST" duration-ms="643" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAddressTest status=FAILURE method=AddAddressTest.addAddressTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" started-at="2023-05-02T18:49:56 IST" name="beforeMethod" finished-at="2023-05-02T18:49:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.AddAddressTest.dummyTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" started-at="2023-05-02T18:49:56 IST" name="beforeMethod" finished-at="2023-05-02T18:49:56 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dummyTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" started-at="2023-05-02T18:49:56 IST" name="dummyTest" finished-at="2023-05-02T18:49:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dummyTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" started-at="2023-05-02T18:49:56 IST" name="afterMethod" finished-at="2023-05-02T18:49:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dummyTest status=SUCCESS method=AddAddressTest.dummyTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.AddAddressTest@e54303]" started-at="2023-05-02T18:49:56 IST" name="teardown" finished-at="2023-05-02T18:49:56 IST" duration-ms="701" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.AddAddressTest -->
      <class name="lumaProject.Tests.LoginpageTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:47:54 IST" name="setup" finished-at="2023-05-02T18:48:20 IST" duration-ms="26561" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:20 IST" name="beforeMethod" finished-at="2023-05-02T18:48:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.dummyTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:20 IST" name="beforeMethod" finished-at="2023-05-02T18:48:20 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dummyTest()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:20 IST" name="dummyTest" finished-at="2023-05-02T18:48:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dummyTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:20 IST" name="afterMethod" finished-at="2023-05-02T18:48:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dummyTest status=SUCCESS method=LoginpageTest.dummyTest()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:20 IST" name="beforeMethod" finished-at="2023-05-02T18:48:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.forgetPassword()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:20 IST" name="beforeMethod" finished-at="2023-05-02T18:48:20 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="forgetPassword()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:20 IST" name="forgetPassword" finished-at="2023-05-02T18:48:25 IST" duration-ms="4279" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetPassword -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:25 IST" name="afterMethod" finished-at="2023-05-02T18:48:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgetPassword status=SUCCESS method=LoginpageTest.forgetPassword()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:25 IST" name="beforeMethod" finished-at="2023-05-02T18:48:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:25 IST" name="beforeMethod" finished-at="2023-05-02T18:48:25 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:25 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:48:39 IST" duration-ms="14056" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[asgt3@qw.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:39 IST" name="afterMethod" finished-at="2023-05-02T18:48:39 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:39 IST" name="beforeMethod" finished-at="2023-05-02T18:48:39 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:39 IST" name="beforeMethod" finished-at="2023-05-02T18:48:39 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:39 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:48:51 IST" duration-ms="12603" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test1@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:51 IST" name="afterMethod" finished-at="2023-05-02T18:48:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:51 IST" name="beforeMethod" finished-at="2023-05-02T18:48:51 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:51 IST" name="beforeMethod" finished-at="2023-05-02T18:48:51 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:48:51 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:49:01 IST" duration-ms="9806" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test2@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:01 IST" name="afterMethod" finished-at="2023-05-02T18:49:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:01 IST" name="beforeMethod" finished-at="2023-05-02T18:49:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:01 IST" name="beforeMethod" finished-at="2023-05-02T18:49:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:01 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:49:10 IST" duration-ms="9069" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test3@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:10 IST" name="afterMethod" finished-at="2023-05-02T18:49:10 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:10 IST" name="beforeMethod" finished-at="2023-05-02T18:49:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:10 IST" name="beforeMethod" finished-at="2023-05-02T18:49:10 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:10 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:49:19 IST" duration-ms="8799" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test4@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:19 IST" name="afterMethod" finished-at="2023-05-02T18:49:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:19 IST" name="beforeMethod" finished-at="2023-05-02T18:49:19 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.validateWrongCredentials()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:19 IST" name="beforeMethod" finished-at="2023-05-02T18:49:19 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateWrongCredentials()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:19 IST" name="validateWrongCredentials" finished-at="2023-05-02T18:49:28 IST" duration-ms="9295" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [The account sign-in was incorrect or your account is disabled temporarily. Please wait and try again later.] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [The account sign-in was incorrect or your account is disabled temporarily. Please wait and try again later.] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at lumaProject.Tests.LoginpageTest.validateWrongCredentials(LoginpageTest.java:107)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWrongCredentials -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:28 IST" name="afterMethod" finished-at="2023-05-02T18:49:29 IST" duration-ms="479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWrongCredentials status=FAILURE method=LoginpageTest.validateWrongCredentials()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.LoginpageTest@43f82e78]" started-at="2023-05-02T18:49:29 IST" name="teardown" finished-at="2023-05-02T18:49:30 IST" duration-ms="1320" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.LoginpageTest -->
      <class name="lumaProject.Tests.WhatsNewTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.WhatsNewTest@2a448449]" started-at="2023-05-02T18:46:52 IST" name="setup" finished-at="2023-05-02T18:47:20 IST" duration-ms="27674" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.WhatsNewTest@2a448449]" started-at="2023-05-02T18:47:20 IST" name="beforeMethod" finished-at="2023-05-02T18:47:20 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.WhatsNewTest.validateWhatsNew()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.WhatsNewTest@2a448449]" started-at="2023-05-02T18:47:20 IST" name="beforeMethod" finished-at="2023-05-02T18:47:20 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateWhatsNew()[pri:0, instance:lumaProject.Tests.WhatsNewTest@2a448449]" started-at="2023-05-02T18:47:20 IST" name="validateWhatsNew" finished-at="2023-05-02T18:47:26 IST" duration-ms="6112" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [15 Items] but found [12 Items]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [15 Items] but found [12 Items]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at lumaProject.Tests.WhatsNewTest.validateWhatsNew(WhatsNewTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWhatsNew -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.WhatsNewTest@2a448449]" started-at="2023-05-02T18:47:26 IST" name="afterMethod" finished-at="2023-05-02T18:47:30 IST" duration-ms="3562" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWhatsNew status=FAILURE method=WhatsNewTest.validateWhatsNew()[pri:0, instance:lumaProject.Tests.WhatsNewTest@2a448449] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.WhatsNewTest@2a448449]" started-at="2023-05-02T18:47:30 IST" name="teardown" finished-at="2023-05-02T18:47:31 IST" duration-ms="1295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.WhatsNewTest -->
    </test> <!-- uitest_Chrome -->
    <test started-at="2023-05-02T18:46:21 IST" name="uitest_firefox" finished-at="2023-05-02T18:53:27 IST" duration-ms="425625">
      <class name="lumaProject.Tests.HomePageTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" started-at="2023-05-02T18:46:21 IST" name="setup" finished-at="2023-05-02T18:46:58 IST" duration-ms="36571" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" started-at="2023-05-02T18:46:58 IST" name="beforeMethod" finished-at="1970-01-01T05:30:00 IST" duration-ms="-1683033418462" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.HomePageTest.validate_AboutUs()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.aventstack.extentreports.service.ExtentTestManager.createMethod(ExtentTestManager.java:53)
at com.aventstack.extentreports.testng.listener.ExtentITestListenerClassAdapter.beforeInvocation(ExtentITestListenerClassAdapter.java:55)
at org.testng.internal.invokers.InvokedMethodListenerInvoker.invokeListener(InvokedMethodListenerInvoker.java:55)
at org.testng.internal.invokers.BaseInvoker.runInvokedMethodListeners(BaseInvoker.java:67)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:331)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" started-at="2023-05-02T18:46:58 IST" name="beforeMethod" finished-at="2023-05-02T18:46:58 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validate_AboutUs()[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" started-at="2023-05-02T18:46:58 IST" name="validate_AboutUs" finished-at="2023-05-02T18:46:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.aventstack.extentreports.service.ExtentTestManager.createMethod(ExtentTestManager.java:53)
at com.aventstack.extentreports.testng.listener.ExtentITestListenerClassAdapter.beforeInvocation(ExtentITestListenerClassAdapter.java:55)
at org.testng.internal.invokers.InvokedMethodListenerInvoker.invokeListener(InvokedMethodListenerInvoker.java:55)
at org.testng.internal.invokers.BaseInvoker.runInvokedMethodListeners(BaseInvoker.java:67)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:331)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_AboutUs -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" started-at="2023-05-02T18:46:58 IST" name="afterMethod" finished-at="2023-05-02T18:46:58 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" started-at="2023-05-02T18:46:58 IST" name="beforeMethod" finished-at="2023-05-02T18:46:58 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" started-at="2023-05-02T18:46:58 IST" name="beforeMethod" finished-at="2023-05-02T18:46:58 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validate_HomeIcon()[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" started-at="2023-05-02T18:46:58 IST" name="validate_HomeIcon" finished-at="2023-05-02T18:46:58 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at com.aventstack.extentreports.service.ExtentTestManager.createMethod(ExtentTestManager.java:53)
at com.aventstack.extentreports.testng.listener.ExtentITestListenerClassAdapter.beforeInvocation(ExtentITestListenerClassAdapter.java:55)
at org.testng.internal.invokers.InvokedMethodListenerInvoker.invokeListener(InvokedMethodListenerInvoker.java:55)
at org.testng.internal.invokers.BaseInvoker.runInvokedMethodListeners(BaseInvoker.java:67)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:331)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.internal.invokers.TestInvoker.runConfigMethods(TestInvoker.java:823)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:590)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validate_HomeIcon -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" started-at="2023-05-02T18:46:58 IST" name="afterMethod" finished-at="2023-05-02T18:46:58 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.HomePageTest@63f8276e]" started-at="2023-05-02T18:46:58 IST" name="teardown" finished-at="2023-05-02T18:46:58 IST" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.HomePageTest -->
      <class name="lumaProject.Tests.CreateAccountTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.CreateAccountTest@6127a7e]" started-at="2023-05-02T18:48:00 IST" name="setup" finished-at="2023-05-02T18:48:35 IST" duration-ms="35354" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.CreateAccountTest@6127a7e]" started-at="2023-05-02T18:48:35 IST" name="beforeMethod" finished-at="2023-05-02T18:48:35 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.CreateAccountTest.createAccount()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.CreateAccountTest@6127a7e]" started-at="2023-05-02T18:48:35 IST" name="beforeMethod" finished-at="2023-05-02T18:48:35 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="createAccount()[pri:0, instance:lumaProject.Tests.CreateAccountTest@6127a7e]" started-at="2023-05-02T18:48:35 IST" name="createAccount" finished-at="2023-05-02T18:49:20 IST" duration-ms="44668" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@data-bind='html: $parent.prepareMessageForHtml(message.text)']' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@data-bind='html: $parent.prepareMessageForHtml(message.text)']' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:87)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at Utility.Util.waitForElementToBeVisible(Util.java:76)
at pomPages.AccountCreatePage.get_actCreateSuccess(AccountCreatePage.java:92)
at lumaProject.Tests.CreateAccountTest.createAccount(CreateAccountTest.java:54)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: //div[@data-bind='html: $parent.prepareMessageForHtml(message.text)']
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [9da3f21f-7292-4979-b3ec-5bee389c41bd, findElement {using=xpath, value=//div[@data-bind='html: $parent.prepareMessageForHtml(message.text)']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 112.0.2, moz:accessibilityChecks: false, moz:buildID: 20230424110519, moz:debuggerAddress: 127.0.0.1:24887, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 15464, moz:profile: C:\Users\ASHUTO~1\AppData\L..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://127.0.0.1:24887/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 9da3f21f-7292-4979-b3ec-5bee389c41bd
at jdk.internal.reflect.GeneratedConstructorAccessor37.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:535)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:351)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:343)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy35.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:307)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:40)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:293)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccount -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.CreateAccountTest@6127a7e]" started-at="2023-05-02T18:49:20 IST" name="afterMethod" finished-at="2023-05-02T18:49:20 IST" duration-ms="114" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=createAccount status=FAILURE method=CreateAccountTest.createAccount()[pri:0, instance:lumaProject.Tests.CreateAccountTest@6127a7e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.CreateAccountTest@6127a7e]" started-at="2023-05-02T18:49:20 IST" name="teardown" finished-at="2023-05-02T18:49:24 IST" duration-ms="3591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.CreateAccountTest -->
      <class name="lumaProject.Tests.AddAddressTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" started-at="2023-05-02T18:52:15 IST" name="setup" finished-at="2023-05-02T18:52:46 IST" duration-ms="30662" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" started-at="2023-05-02T18:52:46 IST" name="beforeMethod" finished-at="2023-05-02T18:52:46 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.AddAddressTest.addAddressTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" started-at="2023-05-02T18:52:46 IST" name="beforeMethod" finished-at="2023-05-02T18:52:46 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="addAddressTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" started-at="2023-05-02T18:52:46 IST" name="addAddressTest" finished-at="2023-05-02T18:53:25 IST" duration-ms="39313" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@aria-hidden='false']//a[normalize-space()='My Account']' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //div[@aria-hidden='false']//a[normalize-space()='My Account']' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:87)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at Utility.Util.waitForElementToBeVisible(Util.java:76)
at pomPages.MyaccountPage.click_myActrightLink(MyaccountPage.java:37)
at lumaProject.Tests.AddAddressTest.addAddressTest(AddAddressTest.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: //div[@aria-hidden='false']//a[normalize-space()='My Account']
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [2bdfe2f5-3cb2-4411-8a45-e199a5f0822d, findElement {using=xpath, value=//div[@aria-hidden='false']//a[normalize-space()='My Account']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 112.0.2, moz:accessibilityChecks: false, moz:buildID: 20230424110519, moz:debuggerAddress: 127.0.0.1:44208, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 12092, moz:profile: C:\Users\ASHUTO~1\AppData\L..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://127.0.0.1:44208/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 2bdfe2f5-3cb2-4411-8a45-e199a5f0822d
at jdk.internal.reflect.GeneratedConstructorAccessor37.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:535)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:351)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:343)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy35.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:307)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:40)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:293)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addAddressTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" started-at="2023-05-02T18:53:25 IST" name="afterMethod" finished-at="2023-05-02T18:53:26 IST" duration-ms="213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addAddressTest status=FAILURE method=AddAddressTest.addAddressTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" started-at="2023-05-02T18:53:26 IST" name="beforeMethod" finished-at="2023-05-02T18:53:26 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.AddAddressTest.dummyTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dummyTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" started-at="2023-05-02T18:53:26 IST" name="dummyTest" finished-at="2023-05-02T18:53:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dummyTest -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" started-at="2023-05-02T18:53:26 IST" name="beforeMethod" finished-at="2023-05-02T18:53:26 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" started-at="2023-05-02T18:53:26 IST" name="afterMethod" finished-at="2023-05-02T18:53:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dummyTest status=SUCCESS method=AddAddressTest.dummyTest()[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.AddAddressTest@495fac5f]" started-at="2023-05-02T18:53:26 IST" name="teardown" finished-at="2023-05-02T18:53:27 IST" duration-ms="1458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.AddAddressTest -->
      <class name="lumaProject.Tests.LoginpageTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:49:24 IST" name="setup" finished-at="2023-05-02T18:50:00 IST" duration-ms="36165" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:00 IST" name="beforeMethod" finished-at="2023-05-02T18:50:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.dummyTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:00 IST" name="beforeMethod" finished-at="2023-05-02T18:50:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dummyTest()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:00 IST" name="dummyTest" finished-at="2023-05-02T18:50:00 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dummyTest -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:00 IST" name="afterMethod" finished-at="2023-05-02T18:50:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=dummyTest status=SUCCESS method=LoginpageTest.dummyTest()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:00 IST" name="beforeMethod" finished-at="2023-05-02T18:50:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.forgetPassword()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="forgetPassword()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:00 IST" name="forgetPassword" finished-at="2023-05-02T18:50:09 IST" duration-ms="8895" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forgetPassword -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:00 IST" name="beforeMethod" finished-at="2023-05-02T18:50:00 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:09 IST" name="afterMethod" finished-at="2023-05-02T18:50:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=forgetPassword status=SUCCESS method=LoginpageTest.forgetPassword()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:09 IST" name="beforeMethod" finished-at="2023-05-02T18:50:09 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:09 IST" name="beforeMethod" finished-at="2023-05-02T18:50:09 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:09 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:50:22 IST" duration-ms="13216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[asgt3@qw.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:22 IST" name="afterMethod" finished-at="2023-05-02T18:50:22 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:22 IST" name="beforeMethod" finished-at="2023-05-02T18:50:22 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:22 IST" name="beforeMethod" finished-at="2023-05-02T18:50:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:22 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:50:33 IST" duration-ms="10878" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[test1@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:33 IST" name="afterMethod" finished-at="2023-05-02T18:50:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=SUCCESS method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:33 IST" name="beforeMethod" finished-at="2023-05-02T18:50:33 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:33 IST" name="beforeMethod" finished-at="2023-05-02T18:50:33 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:33 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:50:42 IST" duration-ms="9503" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[test2@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Unable to locate element: //div[@aria-hidden='false']//a[normalize-space()='Sign Out']
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [12989ff6-80e4-4668-a03d-775f10ab705b, findElement {using=xpath, value=//div[@aria-hidden='false']//a[normalize-space()='Sign Out']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 112.0.2, moz:accessibilityChecks: false, moz:buildID: 20230424110519, moz:debuggerAddress: 127.0.0.1:6591, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18788, moz:profile: C:\Users\ASHUTO~1\AppData\L..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://127.0.0.1:6591/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 12989ff6-80e4-4668-a03d-775f10ab705b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Unable to locate element: //div[@aria-hidden='false']//a[normalize-space()='Sign Out']
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [12989ff6-80e4-4668-a03d-775f10ab705b, findElement {using=xpath, value=//div[@aria-hidden='false']//a[normalize-space()='Sign Out']}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 112.0.2, moz:accessibilityChecks: false, moz:buildID: 20230424110519, moz:debuggerAddress: 127.0.0.1:6591, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18788, moz:profile: C:\Users\ASHUTO~1\AppData\L..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://127.0.0.1:6591/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 12989ff6-80e4-4668-a03d-775f10ab705b
at jdk.internal.reflect.GeneratedConstructorAccessor37.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:535)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:351)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:343)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy35.click(Unknown Source)
at pomPages.LogoutPage.signout_link(LogoutPage.java:42)
at lumaProject.Tests.LoginpageTest.test_ValidLogin(LoginpageTest.java:85)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:42 IST" name="afterMethod" finished-at="2023-05-02T18:50:43 IST" duration-ms="348" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=FAILURE method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:43 IST" name="beforeMethod" finished-at="2023-05-02T18:50:43 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:43 IST" name="beforeMethod" finished-at="2023-05-02T18:50:43 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:50:43 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:51:13 IST" duration-ms="30026" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[test3@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: .//div[@class='panel header']//a[contains(text(),'Sign In')]' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: .//div[@class='panel header']//a[contains(text(),'Sign In')]' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:87)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at Utility.Util.waitForElementToBeVisible(Util.java:76)
at pomPages.Loginpage.clicksignInLink(Loginpage.java:51)
at lumaProject.Tests.LoginpageTest.test_ValidLogin(LoginpageTest.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: .//div[@class='panel header']//a[contains(text(),'Sign In')]
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [12989ff6-80e4-4668-a03d-775f10ab705b, findElement {using=xpath, value=.//div[@class='panel header']//a[contains(text(),'Sign In')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 112.0.2, moz:accessibilityChecks: false, moz:buildID: 20230424110519, moz:debuggerAddress: 127.0.0.1:6591, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18788, moz:profile: C:\Users\ASHUTO~1\AppData\L..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://127.0.0.1:6591/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 12989ff6-80e4-4668-a03d-775f10ab705b
at jdk.internal.reflect.GeneratedConstructorAccessor37.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:535)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:351)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:343)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy35.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:307)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:40)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:293)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:51:13 IST" name="afterMethod" finished-at="2023-05-02T18:51:13 IST" duration-ms="192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=FAILURE method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:51:13 IST" name="beforeMethod" finished-at="2023-05-02T18:51:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:51:13 IST" name="test_ValidLogin" data-provider="userData" finished-at="2023-05-02T18:51:43 IST" duration-ms="30432" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[test4@ut.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Ashu@123]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: .//div[@class='panel header']//a[contains(text(),'Sign In')]' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: .//div[@class='panel header']//a[contains(text(),'Sign In')]' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:87)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at Utility.Util.waitForElementToBeVisible(Util.java:76)
at pomPages.Loginpage.clicksignInLink(Loginpage.java:51)
at lumaProject.Tests.LoginpageTest.test_ValidLogin(LoginpageTest.java:53)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: .//div[@class='panel header']//a[contains(text(),'Sign In')]
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [12989ff6-80e4-4668-a03d-775f10ab705b, findElement {using=xpath, value=.//div[@class='panel header']//a[contains(text(),'Sign In')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 112.0.2, moz:accessibilityChecks: false, moz:buildID: 20230424110519, moz:debuggerAddress: 127.0.0.1:6591, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18788, moz:profile: C:\Users\ASHUTO~1\AppData\L..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://127.0.0.1:6591/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 12989ff6-80e4-4668-a03d-775f10ab705b
at jdk.internal.reflect.GeneratedConstructorAccessor37.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:535)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:351)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:343)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy35.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:307)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:40)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:293)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_ValidLogin -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:51:13 IST" name="beforeMethod" finished-at="2023-05-02T18:51:13 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:51:43 IST" name="afterMethod" finished-at="2023-05-02T18:51:43 IST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_ValidLogin status=FAILURE method=LoginpageTest.test_ValidLogin(java.lang.String,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:51:43 IST" name="beforeMethod" finished-at="2023-05-02T18:51:43 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.LoginpageTest.validateWrongCredentials()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateWrongCredentials()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:51:43 IST" name="validateWrongCredentials" finished-at="2023-05-02T18:52:14 IST" duration-ms="30490" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: .//div[@class='panel header']//a[contains(text(),'Sign In')]' (tried for 30 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: .//div[@class='panel header']//a[contains(text(),'Sign In')]' (tried for 30 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:87)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)
at Utility.Util.waitForElementToBeVisible(Util.java:76)
at pomPages.Loginpage.clicksignInLink(Loginpage.java:51)
at lumaProject.Tests.LoginpageTest.validateWrongCredentials(LoginpageTest.java:98)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
Caused by: org.openqa.selenium.NoSuchElementException: Unable to locate element: .//div[@class='panel header']//a[contains(text(),'Sign In')]
For documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element
Build info: version: '4.7.2', revision: '4d4020c3b7'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '14.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [12989ff6-80e4-4668-a03d-775f10ab705b, findElement {using=xpath, value=.//div[@class='panel header']//a[contains(text(),'Sign In')]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 112.0.2, moz:accessibilityChecks: false, moz:buildID: 20230424110519, moz:debuggerAddress: 127.0.0.1:6591, moz:geckodriverVersion: 0.33.0, moz:headless: false, moz:platformVersion: 10.0, moz:processID: 18788, moz:profile: C:\Users\ASHUTO~1\AppData\L..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, moz:windowless: false, pageLoadStrategy: normal, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://127.0.0.1:6591/devtool..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 12989ff6-80e4-4668-a03d-775f10ab705b
at jdk.internal.reflect.GeneratedConstructorAccessor37.newInstance(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:481)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:535)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:351)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:343)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)
at com.sun.proxy.$Proxy35.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:307)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:40)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:293)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWrongCredentials -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:51:43 IST" name="beforeMethod" finished-at="2023-05-02T18:51:43 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:52:14 IST" name="afterMethod" finished-at="2023-05-02T18:52:14 IST" duration-ms="205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWrongCredentials status=FAILURE method=LoginpageTest.validateWrongCredentials()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.LoginpageTest@6bbe2511]" started-at="2023-05-02T18:52:14 IST" name="teardown" finished-at="2023-05-02T18:52:15 IST" duration-ms="1141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.LoginpageTest -->
      <class name="lumaProject.Tests.WhatsNewTest">
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:lumaProject.Tests.WhatsNewTest@75f95314]" started-at="2023-05-02T18:46:58 IST" name="setup" finished-at="2023-05-02T18:47:41 IST" duration-ms="42980" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method,java.lang.String)[pri:0, instance:lumaProject.Tests.WhatsNewTest@75f95314]" started-at="2023-05-02T18:47:41 IST" name="beforeMethod" finished-at="2023-05-02T18:47:41 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void lumaProject.Tests.WhatsNewTest.validateWhatsNew()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:lumaProject.Tests.WhatsNewTest@75f95314]" started-at="2023-05-02T18:47:41 IST" name="beforeMethod" finished-at="2023-05-02T18:47:41 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="validateWhatsNew()[pri:0, instance:lumaProject.Tests.WhatsNewTest@75f95314]" started-at="2023-05-02T18:47:41 IST" name="validateWhatsNew" finished-at="2023-05-02T18:47:55 IST" duration-ms="14125" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [15 Items] but found [12 Items]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [15 Items] but found [12 Items]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at lumaProject.Tests.WhatsNewTest.validateWhatsNew(WhatsNewTest.java:28)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWhatsNew -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:lumaProject.Tests.WhatsNewTest@75f95314]" started-at="2023-05-02T18:47:55 IST" name="afterMethod" finished-at="2023-05-02T18:47:56 IST" duration-ms="1151" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateWhatsNew status=FAILURE method=WhatsNewTest.validateWhatsNew()[pri:0, instance:lumaProject.Tests.WhatsNewTest@75f95314] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:lumaProject.Tests.WhatsNewTest@75f95314]" started-at="2023-05-02T18:47:56 IST" name="teardown" finished-at="2023-05-02T18:48:00 IST" duration-ms="3519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- lumaProject.Tests.WhatsNewTest -->
    </test> <!-- uitest_firefox -->
  </suite> <!-- MyTestSuite -->
</testng-results>
